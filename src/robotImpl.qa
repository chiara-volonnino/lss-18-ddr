System robotImpl

/* Environment control  */
Dispatch environment: environment					// R-startExplore

/* Temperature control event */
Event temperature: temp(X)							// R-tempOk

/* Robot command */
Dispatch exploreCmd: exploreCmd						// R-explore
Dispatch stopCmd: stopCmd							// R-stopExplore
Dispatch backHomeCmd: backHomeCmd					// R-backHome
Dispatch continueExploreCmd: continueExploreCmd		// R-continueExplore

/* Console command */
Dispatch alert: alert								// R-alert
Dispatch bombInBag: bombInBag(X)

Dispatch robotState: robotState(X)					//
Dispatch robotBackHome: robotBackHome				// R-BackHome

Context ctxRobotImpl ip [ host='localhost' port=8079 ]

QActor robotdiscovery context ctxRobotImpl {
	
	/* Rating initial condition  */
	State home initial [
		
	] transition
		stopAfter 60000
		whenMsg [ !? environment ]  exploreCmd -> exploration						// R-explore
	
	/*
	 * -----------------------------------------------------------------------------
	 * Exploration business logic
	 * -----------------------------------------------------------------------------
	 */
	State exploration [
		// ACTION: start blinking													// R-blinkLed
		// ACTION: explore the environment
	] transition
		stopAfter 60000
		whenMsg stopCmd -> idle													// R-stopExplore
	
		State idle [
		// ACTION: halt
		// ACTION: stop blinking													// R-blinkLed (stop)
	] transition
		stopAfter 60000
		whenMsg exploreCmd -> exploration,											// R-continueExplore
		whenMsg backHomeCmd -> home													// R-backHome
		
	State handleBag [
		// ACTION: halt																// R-stopAtBag
		// ACTION: stop blinking													
		// ACTION: take picture														// R-takePhoto
		//forward console -m bombInBag: bag(X)										// R-sendPhoto
	] transition
		stopAfter 60000
		whenMsg backHomeCmd -> home,
		whenMsg exploreCmd -> exploration
}